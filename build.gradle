plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
}

group 'edu.knox.cder.testy'
version '0.0.1'

repositories {
    mavenCentral()
}

javafx {
    version = '21' 
    modules = [ 'javafx.base', 'javafx.controls', 'javafx.fxml', 'javafx.graphics' ] 
}

dependencies{
	implementation group: 'org.ow2.asm', name: 'asm', version: '9.6'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'
    // jackson if we want to parse json or xml (currently we are using a different library)
	//implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.15.3'
	//implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.15.3'
	//implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.15.3'
}

application {
    // https://stackoverflow.com/questions/52569724/javafx-11-create-a-jar-file-with-gradle
    mainClassName = 'edu.knox.cder.testy.Main'
}

tasks.withType(Jar) {
    // TODO: why is this necessary?
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

// https://gist.github.com/jdavidzapatab/1c974b5422aa5665c59cc6a6a7a91cc9
task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': "${mainClassName}"
    }
    archiveBaseName = "${rootProject.name}"
    from { configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}